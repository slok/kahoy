// Code generated by mockery v2.3.0. DO NOT EDIT.

package hookmock

import (
	exec "os/exec"

	io "io"

	mock "github.com/stretchr/testify/mock"
)

// CmdRunner is an autogenerated mock type for the CmdRunner type
type CmdRunner struct {
	mock.Mock
}

// CombinedOutputPipe provides a mock function with given fields: _a0
func (_m *CmdRunner) CombinedOutputPipe(_a0 *exec.Cmd) (io.Reader, error) {
	ret := _m.Called(_a0)

	var r0 io.Reader
	if rf, ok := ret.Get(0).(func(*exec.Cmd) io.Reader); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.Reader)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*exec.Cmd) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Start provides a mock function with given fields: _a0
func (_m *CmdRunner) Start(_a0 *exec.Cmd) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*exec.Cmd) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Wait provides a mock function with given fields: _a0
func (_m *CmdRunner) Wait(_a0 *exec.Cmd) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*exec.Cmd) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
