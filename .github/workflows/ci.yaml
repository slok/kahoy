name: CI

on: [push, pull_request]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    # Execute the checks inside the container instead the VM.
    container: golangci/golangci-lint:v1.30.0-alpine
    steps:
      - uses: actions/checkout@v2
      - run: ./scripts/check/check.sh

  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2-beta
        with:
          go-version: 1.15
      - run: make ci-test
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_UPLOAD_TOKEN }}
          file: ./.test_coverage.txt

  rolling-release-image:
    # Only on master.
    if: startsWith(github.ref, 'refs/heads/master')
    env:
      TAG_IMAGE_LATEST: "true"
      PROD_IMAGE_NAME: ${GITHUB_REPOSITORY}
    needs: [check, unit-test]
    name: Release image
    runs-on: ubuntu-latest
    steps:
      # Set up SHA as version.
      - name: Set tag on VERSION env var
        run: echo ::set-env name=VERSION::${GITHUB_SHA}
      - uses: actions/checkout@v2
      
      - name: Build image
        run: make build-image
      - name: Docker login
        run: docker login ${DOCKER_HOST} -u ${DOCKER_USER} -p ${DOCKER_TOKEN}
        env:
          DOCKER_HOST: ""
          DOCKER_USER: slok
          DOCKER_TOKEN: ${{secrets.DOCKER_HUB_TOKEN}}
      - name: Publish image
        run: make publish-image

  tagged-release-image:
    # Only on tags.
    if: startsWith(github.ref, 'refs/tags/')
    env:
      PROD_IMAGE_NAME: ${GITHUB_REPOSITORY}
    needs: [check, unit-test]
    name: Tagged release image
    runs-on: ubuntu-latest
    steps:
      # Set up tag as version.
      - name: Set tag on VERSION env var
        run: echo ::set-env name=VERSION::$(echo ${GITHUB_REF:10})
      - uses: actions/checkout@v2

      - name: Build image
        run: make build-image
      - name: Docker login
        run: docker login ${DOCKER_HOST} -u ${DOCKER_USER} -p ${DOCKER_TOKEN}
        env:
          DOCKER_HOST: ""
          DOCKER_USER: slok
          DOCKER_TOKEN: ${{secrets.DOCKER_HUB_TOKEN}}
      - name: Publish image
        run: make publish-image

  tagged-release-binaries:
    # Only on tags.
    if: startsWith(github.ref, 'refs/tags/')
    needs: [check, unit-test]
    name: Tagged release binaries
    runs-on: ubuntu-latest
    steps:
      # Set up tag as version.
      - name: Set tag on VERSION env var
        run: echo ::set-env name=VERSION::$(echo ${GITHUB_REF:10})
      - uses: actions/checkout@v2

      - name: Build binaries
        run: |
          mkdir -p ./bin
          chmod -R 0777 ./bin
          make build-all
      - name: Upload binaries
        uses: xresloader/upload-to-github-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'bin/*'
          tags: true
          draft: true